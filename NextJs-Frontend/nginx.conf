server {
    listen 80;
    server_name localhost;
    resolver 127.0.0.11 valid=30s;

    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 502 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /api {
        set $backend_url $BACKEND_URL;
        proxy_pass http://ChatAppDotNetBackend:5001/api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_intercept_errors on;
    }

    location /chathub {
        set $backend_url $BACKEND_URL;
        proxy_pass http://ChatAppDotNetBackend:5001/chathub;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_intercept_errors on;
    }

    location /swagger {
        set $backend_url $BACKEND_URL;
        proxy_pass http://ChatAppDotNetBackend:5001/swagger;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_intercept_errors on;
    }

    location /proxy/ {
        if ($arg_url ~* "^https?://(.*)") {
            set $upstream_host $1;
            set $upstream $arg_url;
        }

        if ($upstream = '') {
            return 400 "url parameter is required";
        }

        resolver 8.8.8.8;  # Specify a DNS resolver for dynamic URLs

        proxy_pass $upstream;

        proxy_set_header Host $upstream_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';

        #proxy_cache proxy_cache_zone;
        #proxy_cache_valid 200 302 60m;
        #proxy_cache_valid 404 1m;
        #proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        #add_header X-Proxy-Cache $upstream_cache_status;
    }

    #location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
    #    add_header 'Access-Control-Allow-Origin' '*';
    #    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    #    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';
    #}

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}